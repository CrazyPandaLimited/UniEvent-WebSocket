MODULE = Panda::WebSocket::Server                PACKAGE = Panda::WebSocket::Server::Connection
PROTOTYPES: DISABLE

void panda::websocket::server::Connection::accept_callback(CV* cb) {
    xs::SvIntrPtr cb_ptr(cb);
    xs::SvIntrPtr connection_class(SvSTASH(SvRV(ST(0))));
    THIS->accept_callback = [cb_ptr, connection_class](Connection* conn, ConnectRequestSP request) {
        SV* arg = sv_2mortal(typemap_outcast<panda::websocket::ConnectRequestSP, const char* CLASS>(request, "Panda::WebSocket::ConnectRequest"));
        xs::call_sub_void(cb_ptr.get<CV>(), &arg, 1);
    };
}

void panda::websocket::server::Connection::message_callback(CV* cb) {
    xs::SvIntrPtr cb_ptr(cb);
    xs::SvIntrPtr connection_class(SvSTASH(SvRV(ST(0))));
    THIS->message_callback = [cb_ptr, connection_class](Connection* conn, MessageSP request) {
        SV* arg = sv_2mortal(typemap_outcast<panda::websocket::MessageSP, const char* CLASS>(request, "Panda::WebSocket::Message"));
        xs::call_sub_void(cb_ptr.get<CV>(), &arg, 1);
    };
}

void panda::websocket::server::Connection::stream_error_callback(CV* cb) {
    xs::SvIntrPtr cb_ptr(cb);
    xs::SvIntrPtr connection_class(SvSTASH(SvRV(ST(0))));
    THIS->stream_error_callback = [cb_ptr, connection_class](Connection* conn, const panda::event::StreamError& err) {
        SV* arg = sv_2mortal(error_sv(err));
        xs::call_sub_void(cb_ptr.get<CV>(), &arg, 1);
    };
}

uint64_t panda::websocket::server::Connection::id()

void panda::websocket::server::Connection::DESTROY () {}
